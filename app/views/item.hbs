{{#contentFor "stylesheets"}}

<style>
.timelineItem {
    height: 100px;
    width: 100%;
    position: relative;
    background: #ccc;
    background: linear-gradient(90deg, #ccc 50%, #fff 50%);
    border-left: 6px black solid;
    transition: border-color ease-in-out .15s;
    position: relative;
    margin-bottom: 15px;
    margin-left: 5px;
    margin-right: 5px;
    display: inline-block;
}

.timelineItem>ul {
    margin: 0px;
    float: left;
    padding-top: 10px;
    margin-left: 30px !important;
    width: 0px;
}
.timelineItem a {
    background: #ccc;
    color: #fff;
    text-decoration: none;
    z-index: 0;
}
.timelineItem a:hover {
    /*color:dd*/
    text-decoration: none;
}

.timelineItem>textarea {
    resize: none;
    border: 1px solid #ccc;
    height: 100%;
    color: #555;
    width: calc(100% - 30px);
    padding: 6px 12px;
    background: #fff;
    border-radius: 0px 4px 4px 0px;
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    /*border: 1px #ccc solid;*/
}
input:focus, textarea:focus {
    outline: 0 !important;
    outline: thin dotted \9; /* IE6-9 */
    box-shadow: none !important;
    transition: border-color ease-in-out .15s;
    /*box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);*/
}
input:focus {
    border-color: #129FEA !important; 
}
</style>
{{/contentFor}}

<section id="content">
    <form>
        <p><strong>Title</strong></p>
        <div class="form-group">
            <input class="form-control" type="text" placeholder="[title]" name="title">
        </div>
        <div class="form-group">
            <input class="form-control" type="text" placeholder="[subtitle]" name="subtitle">
        </div>

        <hr />
        <p><strong>Timeline</strong> <a id="newItem" href="#">+</a></p>

        <div class="list-group" id="timelineDatum"></div>

        <div class="form-group">
            {{!-- <input class="form-control" disabled="" type="text" placeholder="Wikipedia Link" alt="[citation needed]"> --}}
        </div>

        <hr/>

        <div class="form-group" style="text-align:right">
            <button class="btn btn-default" id="save">Save</button>
            <button class="btn btn-default" id="post">Publish</button>
        </div>
    </form>
</section>

{{#contentFor "scripts"}}
<script>
var prevTarget = {};
var width = 100;

function timelineGen(parent, type) {
    // var width = parent.width/2;
    var width = 100;
    if(type === 'fork') width = width/2;
    
    var timelineItem = '';
    
    timelineItem += '<div class="timelineItem" style="width: calc('+width+'% - 10px)">';
    timelineItem += '    <ul class="fa-ul">';
    timelineItem += '        <li><a href="#" onClick="timeline.newItem(this)" class="fa-li fa fa-plus"></a>&nbsp;</li>';
    timelineItem += '        <li><a href="#" onClick="timeline.forkItem(this)" class="fa-li fa fa-code-fork fa-rotate-90"></a>&nbsp;</li>';
    timelineItem += '        <li><a href="#" onClick="timeline.mergeItem(this)" class="fa-li fa fa-code-fork" style="transform: scale(-1, 1) rotate(90deg);"></a>&nbsp;</li>';
    timelineItem += '        <li><a href="#" onClick="timeline.deleteItem(this)" class="fa-li fa fa-minus"></a>&nbsp;</li>';
    timelineItem += '    </ul>';
    timelineItem += '    <textarea placeholder="foo" maxlength="140" name="item"></textarea>';
    timelineItem += '</div>';

    return timelineItem;

}   

// Check if previous item is fork
// if true:
//      create item with x% width
// else:
//      create normal item
// if merged:
//      set g_var true

var forked = false;

var timeline = {
    newItem: function(item) {
        $('#timelineDatum').append(timelineGen(item,'new'));
    },
    forkItem: function(item) {
        console.log($(item).parents()[2]);
        $('#timelineDatum').append(timelineGen('fork'));
    },
    mergeItem: function(item) {
        $('#timelineDatum').append(timelineGen('merge'));
    },
    deleteItem: function(item) {
        if($('.timelineItem:visible').length > 1) {
            $(item).parent().parent().parent().remove();
        }
    }
};

timeline.newItem();

$("textarea[maxlength]").each(function() {
    var $this = $(this);
    var maxLength = parseInt($this.attr('maxlength'));
    $this.attr('maxlength', null);
    
    var el = $(".charCount>.count");
    
    $this.bind('keyup', function() {
        var cc = $this.val().length;
        
        el.text(maxLength - cc);
        
        if(maxLength < cc) {
            el.css('color', 'red');
        } else {
            el.css('color', '#ccc');
        }
    });
});

$("#post").click(function(e) {
    var f = $('form').serialize();
    console.log(f, $('form'));
    $.post('/api/new', f, function(r) {
        // console.log(r);
    });
});

$(document).click(function(e) {
    // Fancy Timeline borders
    $('textarea').css('border-color', '#ccc');
    $(".timelineItem").css('border-color','#000');

    if($(e.target).is('textarea')) {
        $(e.target).parent().css('border-color','#129FEA');
        $(e.target).css('border-color','#129FEA');
    }
});

</script>
{{/contentFor}}